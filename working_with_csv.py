# -*- coding: utf-8 -*-
"""working_with_csv.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wuzg3fv-Ut9TihPYf9DM0tXixUp5XtAM

**1.Importing pandas**
"""

import pandas as pd

"""**2.Open a local csv file**"""

pd.read_csv('')

"""**3. Opening csv by link**"""

import requests
from io import StringIO

url = " "
headers = {"User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac os x 10.14; rv:66.0) Gecko/20100101 Firefox/66.0"}
raq = requests.get(url, headers = headers)
data = StringIO(req.text)

pd.read_csv(data)

"""**4.Sep parameters or tsv file**"""

pd.read_csv(" ", sep="\t", name=["b","a","j"]) #use this when there is no column name

"""**5.Index_col parameter**"""

#you can create unwanted similar kind of column to a index column
pd.rad_csv("dataset.csv", index_col="column_name_you_want_to_make_it_index")

"""**6.Headerr parameter** # if you column name is treeted as rows then set the value of header 1"""

pd.read_csv("data_set.csv", header=1)

"""**7.use_cols parameter** # by this you cn get the data value that you want to see"""

pd.read_csv("data_set.csv", usecols=['col1', 'col2',......])

"""**8.Squeeze parameters** #it convert the data fram to series"""

pd.read_csv("data_set.csv", usecols=['col1'],squeeze=True)

"""**9.Skiprows/nrows parameter** #they used to skip the row and nrows restrict the row what number you define to the nrows parameter"""

pd.read_csv("data_set.csv", skiprows = [0,1])
pd.read_csv("data_set.csv", nrows=100)

"""**10.Encoding parameters** #there is some time error occure that **unicodeDecoderError** it means the encoding is not utf-8 so in any edito like sublime change there encoding or find what is the encoding value"""

pd.read_csv('zomato.csv', encoding='latin-1')

"""**11.Skip bad lines** # some times in data there will be skipped values and thee will be an parser error so to avoid them use this parameter"""

pd.read_csv("data", error_bad_lines=False)#it will detect them and give remaining data

"""**12.dtypes parameter** #data float me h use int mem"""

pd.read_csv("data", dtype={'column_name':dtype_in_which_u_have_to_convert})